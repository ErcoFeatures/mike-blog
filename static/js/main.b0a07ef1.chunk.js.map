{"version":3,"sources":["logo.svg","aws-exports.js","graphql/queries.js","utils.js","component/Comments/index.js","component/Post/index.js","component/BlogCard/index.js","component/Loader/index.js","container/pages/Home.js","container/layout/Footer.js","container/pages/Blog.js","container/pages/PostShow.js","component/Profile/index.js","container/layout/LeftContent.js","container/layout/header.js","component/Editor/index.js","component/Modal/index.js","component/Button/index.js","component/AddPostModal/index.js","container/newPost/index.js","container/layout/Root.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","awsmobile","listBlogs","getMonthByNumber","num","JavascriptTimeAgo","locale","fr","Comment","props","date","Date","createdAt","getDate","getMonth","getFullYear","getHours","getMinutes","className","createdBy","ReactTimeAgo","content","onClick","onLikeClick","onDislikeClick","Post","name","n","publishAt","title","blogName","showFull","description","length","substring","comments","items","to","pathname","id","showComments","map","el","icons","Etudes","faGraduationCap","Sport","faFutbol","Divers","faCircleNotch","Politique","faBullhorn","Card","listBlog","icon","Loader","PulseLeader","color","this","loading","betweenSpace","size","Component","defaultProps","Home","state","isLoading","setState","prev","api","graphql","graphqlOperation","queries","then","list","data","Root","Blog","blog","match","params","API","getBlog","posts","key","PostShow","post","getPost","withRouter","Profile","LeftContent","Header","blogs","history","push","Editor","text","handleChange","bind","value","onChange","React","ModalApp","isModalOpen","nextprops","propsModal","nextProps","nextState","children","Modal","body","document","html","documentElement","backdropStyle","height","Math","max","scrollHeight","offsetHeight","clientHeight","override","containerClassName","modalId","withClose","closeFunc","style","position","width","right","top","backDrop","Button","classStyle","handleClick","label","Index","show","close","type","doCreate","NewPost","handleShowCreatePost","AuthRoute","component","rest","render","Footer","pageName","exact","path","contextTypes","store","PropTypes","object","Auth","configure","awsconfig","withAuthenticator","etudeBlog","filter","console","log","messages","messages_en","messages_fr","auth","includeGreetings","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0a07ef1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_content_delivery_bucket\": \"blog-app-20191206223226-hostingbucket-blogapp\",\n    \"aws_content_delivery_bucket_region\": \"us-east-2\",\n    \"aws_content_delivery_url\": \"http://blog-app-20191206223226-hostingbucket-blogapp.s3-website.us-east-2.amazonaws.com\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:7addcbfa-002a-4c8f-aeb3-d02138502a27\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_8B3Cfvc9M\",\n    \"aws_user_pools_web_client_id\": \"36a9q3q8k5r7is2eq74uor7a1n\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://dlv32jimsngyrhtbfinn3logku.appsync-api.us-east-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-2\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getBlog = `query GetBlog($id: ID!) {\n  getBlog(id: $id) {\n    id\n    name\n    createdBy\n    posts {\n      items {\n        id\n        title\n        description\n        createdBy\n        likes\n        createdAt\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const listBlogs = `query ListBlogs(\n  $filter: ModelBlogFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listBlogs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      name\n      createdBy\n      posts {\n        nextToken\n      }\n    }\n    nextToken\n  }\n}\n`;\nexport const getPost = `query GetPost($id: ID!) {\n  getPost(id: $id) {\n    id\n    title\n    description\n    createdBy\n    likes\n    createdAt\n    blog {\n      id\n      name\n      createdBy\n      posts {\n        nextToken\n      }\n    }\n    comments {\n      items {\n        id\n        content\n        createdAt\n        createdBy\n        likes\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const listPosts = `query ListPosts(\n  $filter: ModelPostFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listPosts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      title\n      description\n      createdBy\n      likes\n      createdAt\n      blog {\n        id\n        name\n        createdBy\n      }\n      comments {\n        nextToken\n      }\n    }\n    nextToken\n  }\n}\n`;\nexport const getComment = `query GetComment($id: ID!) {\n  getComment(id: $id) {\n    id\n    content\n    createdAt\n    createdBy\n    likes\n    post {\n      id\n      title\n      description\n      createdBy\n      likes\n      createdAt\n      blog {\n        id\n        name\n        createdBy\n      }\n      comments {\n        nextToken\n      }\n    }\n  }\n}\n`;\nexport const listComments = `query ListComments(\n  $filter: ModelCommentFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listComments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      content\n      createdAt\n      createdBy\n      likes\n      post {\n        id\n        title\n        description\n        createdBy\n        likes\n        createdAt\n      }\n    }\n    nextToken\n  }\n}\n`;\n","export const getMonthByNumber = (num) => {\n    return [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July,\",\"August\",\"September\",\"October\",\"November\",\n        \"December\"][num]\n}\n\nexport const addEllipsis = (name, n) => {\n    name = (name.length > n) ? (name.substring(0, n) + '...') : name;\n    return name;\n}\n\nconst calculateCountdown = (endDate) => {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n        years: 0,\n        days: 0,\n        hours: 0,\n        min: 0,\n        sec: 0,\n        millisec: 0,\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n        timeLeft.years = Math.floor(diff / (365.25 * 86400));\n        diff -= timeLeft.years * 365.25 * 86400;\n    }\n    if (diff >= 86400) { // 24 * 60 * 60\n        timeLeft.days = Math.floor(diff / 86400);\n        diff -= timeLeft.days * 86400;\n    }\n    if (diff >= 3600) { // 60 * 60\n        timeLeft.hours = Math.floor(diff / 3600);\n        diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n        timeLeft.min = Math.floor(diff / 60);\n        diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n}","import React from 'react'\nimport './styles.css'\nimport {getMonthByNumber} from \"../../utils\";\nimport fr from 'javascript-time-ago/locale/fr'\nimport JavascriptTimeAgo from 'javascript-time-ago'\nimport ReactTimeAgo from 'react-time-ago'\n// Initialize the desired locales.\nJavascriptTimeAgo.locale(fr)\nexport const Comment = (props) => {\n\n    const date = new Date(props.createdAt)\n    debugger;\n    const publishAt = (date.getDate())+ \" \" + getMonthByNumber((date.getMonth() )) + \" \" + date.getFullYear() + \" \" + date.getHours()+ \":\" + date.getMinutes()\n\n    return (\n        <div className={\"comment-container\"}>\n            <div className={\"post-header\"}>\n                <span className={\"name\"}>{props.createdBy}</span>\n                <span>{\" | \"}</span>\n                <ReactTimeAgo date={date} locale={\"fr\"}/>\n            </div>\n            <div className={\"comment-content\"}>\n                {props.content}\n\n            </div>\n            <div className={\"user-interactions\"}>\n                <i onClick={props.onLikeClick} className={\"fa reaction-icon fa-thumbs-up\"}> {\" (0)\"}</i>\n                <i onClick={props.onDislikeClick} className={\"fa reaction-icon fa-thumbs-down\"}>{\" (0)\"}</i>\n            </div>\n\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {getMonthByNumber, addEllipsis} from '../../utils'\nimport './styles.css'\nimport {Comment} from '../Comments'\nimport {NavLink} from \"react-router-dom\";\n\nconst Post =(props) => {\n    const date = new Date(props.createdAt)\n    const publishAt = getMonthByNumber(date.getDate()) + \" \" + (date.getMonth() + 1) + \" \" + date.getFullYear();\n\n    return (\n        <div className={\"post-content\"}>\n            <div className={\"post-title\"}>\n                {props.title}\n            </div>\n            <div className={\"post-header\"}>\n                <span>{publishAt}</span>\n                <span>{\" | \"}</span>\n                <span> {\"By \"}</span> <span className={\"name\"}>{props.createdBy}</span>\n                <span>{\" | \"}</span>\n                <span className={\"blog-name\"}>{props.blogName}</span>\n            </div>\n\n            <div className={\"post-description\"}>\n                {props.showFull ? props.description : addEllipsis(props.description, 400)}\n            </div>\n\n            {!props.showFull ?\n            <div className={\"post-footer\"}>\n                <NavLink to={{\n                    pathname: \"/post/\" + props.id,\n                }}> {\"Voir plus ...\"}</NavLink>\n\n            </div>\n            :\n                <div className={\"number-comments\"}>\n                    <span>{\"commentaires : \"}  <span className={\"number\"}> {props.comments.items.length}</span></span>\n                </div>\n            }\n\n\n            {props.showComments &&\n            <div className={\"comments-section\"}>\n                <div className={\"comments-header\"}>\n                    {\"Commentaires\"}\n                </div>\n                {props.comments.items.map(el => <Comment {...el}/>)}\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default Post;\n","import React from 'react'\nimport './styles.css'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faFutbol, faGraduationCap, faBullhorn, faCircleNotch} from '@fortawesome/free-solid-svg-icons'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst icons = {\n    Etudes: faGraduationCap,\n    Sport: faFutbol,\n    Divers: faCircleNotch,\n    Politique: faBullhorn\n};\n\n\nexport const Card = (props) => {\n\n    return (\n        <ul className={\"card-container \"}>\n\n            {props.listBlog.map(el =>\n                <NavLink to ={{\n                    pathname:  '/blog/' + el.id ,\n                }}>\n                <li className={\"blog-item card\"}>\n                    <div className={\"left-contain\"}>\n                        <div className={\"card-type\"}> {el.name}</div>\n                        <div className={\"posts-number\"}>{\" 0 posts\"}</div>\n                    </div>\n\n                    <div className={\"right-contain\"}>\n                        <div className={\"blog-icon\"}><FontAwesomeIcon icon={icons[el.name]}/></div>\n                    </div>\n\n                    <div className={\"author\"}>\n                        <span>{\"Ecrit par \"}<span className={\"name\"}>{\"Mike\"}</span></span>\n                    </div>\n                </li>\n                </NavLink>\n            )\n\n            }\n\n        </ul>\n    )\n}","import React, {Component} from 'react'\nimport './styles.css'\nimport { PulseLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\n\nexport const Loader = (props) => (\n    <div className=\"animationLoading\">\n        <div id=\"container\">\n            <div id=\"one\"></div>\n            <div id=\"two\"></div>\n        </div>\n\n        <div id=\"three\"></div>\n        <div id=\"four\"></div>\n        <div id=\"five\"></div>\n        <div id=\"six\"></div>\n    </div>\n);\n\n\n\n\n\n\nexport  class PulseLeader extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div className=\"pulse-loader\">\n                <PulseLoader\n                    color={this.props.color}\n                    loading={true}\n                    betweenSpace={this.props.betweenSpace}\n                    size={this.props.size}\n                />\n            </div>\n        )\n    }\n}\n\nLoader.propTypes = {\n    size : PropTypes.number,\n    color : PropTypes.string,\n    betweenSpace : PropTypes.string\n};\n\nLoader.defaultProps = {\n    betweenSpace: \"2px\",\n    color : '#ff540a',\n    size : 15\n};\n","import React, {Component} from 'react'\nimport {graphqlOperation} from \"aws-amplify\";\nimport * as queries from \"../../graphql/queries\";\nimport Post from '../../component/Post'\nimport {Card} from '../../component/BlogCard'\nimport {PulseLeader} from '../../component/Loader'\n\n\nclass Home  extends Component{\n    constructor(props){\n        super(props)\n            this.state={\n                isLoading:false,\n                listBlog:[]\n            }\n\n    }\n    componentDidMount() {\n        this.setState (prev =>({\n            ...prev,\n            isLoading:true,\n        }));\n\n        this.props.api.graphql(graphqlOperation(queries.listBlogs )\n        ).then(list =>{\n            if(list.data.listBlogs){\n                this.setState (prev =>({\n                    ...prev,\n                    isLoading:false,\n                    listBlog:list.data.listBlogs.items\n                }));\n            }\n        })\n    }\n    onLikeClick (){\n\n    }\n    onDislikeClick (){\n\n    }\n\n    render(){\n        if(this.state.isLoading){\n            return(\n                <PulseLeader color={\"#F7AE54\"}/>\n            )\n        }\n        return (\n            <div className={\"list-blog\"}>\n                {\n                    this.state.listBlog && <Card {...this.state}/>\n                }\n            </div>\n        )\n    }\n\n}\n\n\nexport default Home","import React, {Component} from 'react'\n\nclass Root extends Component{\n\n    constructor(props){\n        super(props)\n\n    }\n\n    render(){\n        return(\n            <div></div>\n        )\n    }\n\n}\n\nexport default Root","import React, {Component} from 'react'\nimport * as queries from \"../../graphql/queries\";\nimport {PulseLeader} from \"../../component/Loader\";\nimport Post from \"../../component/Post\";\n\nimport {API, graphqlOperation} from \"aws-amplify\";\n\n\nclass Blog extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            blog: null\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState(prev => ({\n            ...prev,\n            isLoading: true,\n        }));\n\n\n        const {id} = this.props.match.params;\n        API.graphql(graphqlOperation(queries.getBlog, {id: id})\n        ).then(blog => {\n            if (blog.data.getBlog) {\n                this.setState(prev => ({\n                    ...prev,\n                    isLoading: false,\n                    blog: blog.data.getBlog\n                }));\n            }\n        })\n    }\n\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <PulseLeader color={\"#F7AE54\"}/>\n            )\n        }\n        return (\n            <div className={\"list-blog\"}>\n                {\n                    this.state.blog && this.state.blog.posts.items.map(el => <Post key={el.id} blogName={this.state.blog.name} {...el}/>)\n                }\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default Blog","import React, {Component} from 'react'\nimport Post from \"../../component/Post\";\nimport {Loader} from \"../../component/Loader\";\nimport {API, graphqlOperation} from \"aws-amplify\";\nimport * as queries from \"../../graphql/queries\";\n\nimport {withRouter} from 'react-router-dom'\n\nclass PostShow  extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            post: null\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.setState(prev => ({\n            ...prev,\n            isLoading: true,\n        }));\n        const {id} = this.props.match.params;\n        API.graphql(graphqlOperation(queries.getPost, {id: id})\n        ).then(post => {\n            if (post.data.getPost) {\n                this.setState(prev => ({\n                    ...prev,\n                    isLoading: false,\n                    post: post.data.getPost\n                }));\n            }\n        })\n    }\n\n    render() {\n        if(this.state.isLoading){\n            return(\n                <Loader/>\n            )\n        }\n        return (\n            <div className={\"show-post\"}>\n                {this.state.post && <Post showFull={true} {...this.state.post}  showComments={true}></Post>}\n            </div>\n        )\n    }\n\n}\n\n\nexport default withRouter(PostShow)","import React, {Component} from 'react'\nimport './styles.css'\nclass Profile extends Component{\n\n    constructor(props){\n        super(props)\n\n    }\n\n    render(){\n        return(\n            <div className={\"user-profile-container\"}>\n                <div className={\"photo\"}>\n                    <i className=\"fa fa-user-circle\"/>\n                </div>\n                <div className={\"name\"}>{\"Mike Sene\"}</div>\n                <div className={\"function\"}>{\"Expert en droit Penal\"}</div>\n                <ul className={\"social-media-list\"}>\n                    <li><i className=\"fa fa-facebook\"/></li>\n                    <li><i className=\"fa fa-twitter\"/></li>\n                    <li><i className=\"fa fa-instagram\"/></li>\n                    <li><i className=\"fa fa-linkedin-square\"/></li>\n                </ul>\n            </div>\n        )\n    }\n\n}\n\nexport default Profile","import React, {Component} from 'react'\nimport Profile from \"../../component/Profile\";\nimport {NavLink} from 'react-router-dom'\nimport * as queries from \"../../graphql/queries\";\nimport {API, graphqlOperation} from \"aws-amplify\";\nimport {PulseLeader} from \"../../component/Loader\";\nclass LeftContent extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            isLoading:false,\n            listBlog:[]\n        }\n    }\n\n    componentDidMount() {\n        this.setState (prev =>({\n            ...prev,\n            isLoading:true,\n        }));\n\n        API.graphql(graphqlOperation(queries.listBlogs)\n        ).then(list =>{\n            if(list.data.listBlogs){\n                this.setState (prev =>({\n                    ...prev,\n                    isLoading:false,\n                    listBlog:list.data.listBlogs.items\n                }));\n            }\n        })\n    }\n    render(){\n        if(this.state.isLoading){\n            return(\n                <PulseLeader color={\"#F7AE54\"}/>\n            )\n        }\n\n        return(\n            <div>\n                <Profile/>\n\n            </div>\n        )\n    }\n\n}\n\nexport default LeftContent","import React, {Component} from 'react'\n\nimport {withRouter} from 'react-router-dom'\n\n\nclass Header  extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            blogs:[]\n        }\n\n    }\n\n\n    render(){\n        return (\n            <div className={\"header-container\"}>\n                <div className={\"blog-name\"} onClick={ () => {this.props.history.push('/')}}> <i className=\"icon fa fa-long-arrow-left\"></i></div>\n                <div className={\"contact-me\"}><i className=\"icon fa fa-envelope\"></i></div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default withRouter(Header)","import React from \"react\";\nimport ReactQuill from \"react-quill\";\n\nclass Editor extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { text: '' } // You can also pass a Quill Delta here\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(value) {\n        this.setState({ text: value })\n    }\n\n    render() {\n        return (\n            <ReactQuill value={this.state.text}\n                        onChange={this.handleChange} />\n        )\n    }\n}\n\nexport  default Editor","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport './styles.css'\nclass ModalApp extends Component {\n    constructor(props) {\n      super(props)      \n      this.state = { isModalOpen: props.isModalOpen }\n    }\n\n    componentWillReceiveProps(nextprops){      \n      let propsModal = nextprops.isModalOpen;\n      this.setState({\n        isModalOpen : propsModal\n      })\n    }\n\n    shouldComponentUpdate(nextProps, nextState){\n      return true;\n    }\n\n    render() {\n      return (\n        <div>\n        {\n          (this.state.isModalOpen) ?\n          <Modal {...this.props}>\n              {this.props.children}\n          </Modal> : null\n        }\n        </div>\n      )\n    }\n  }\n\n  class Modal extends Component {\n    render() {\n      let body = document.body,\n        html = document.documentElement;\n\n      let Totalheight = Math.max( body.scrollHeight, body.offsetHeight,\n                       html.clientHeight, html.scrollHeight, html.offsetHeight );\n\n      let backdropStyle = {\n        height: Totalheight,\n      }\n\n      if (this.props.backdropStyle) {\n        for (let key in this.props.backdropStyle) {\n          backdropStyle[key] = this.props.backdropStyle[key]\n        }\n      }\n\n      \n        if(this.props.override) {\n          return (<div>{this.props.children} </div>);\n        }          \n        else {\n          return( <div className={this.props.containerClassName}>\n                    <div className=\"modal-style\" id={this.props.modalId}>\n                        {(this.props.withClose === true )?(<div onClick={this.props.closeFunc} className=\"bm-cross-button\"\n                              style={{position: \"absolute\", width: \"16px\", height: \"17px\", right: \"8px\", top: \"8px\"}}>\n                            <span className=\"bm-cross\" style={{width: \"100%\", height: \"100%\"}}><i\n                                className=\"ga ga-close01 icon-button\"></i></span>\n                        </div>):null}\n                      {this.props.children}\n                    </div>\n                    {(this.props.backDrop === true) ?\n                    (<div className=\"backdrop-style\" style={backdropStyle} />) : null }\n                  </div>);\n                 \n        }       \n      \n    }\n  }\n\nModalApp.propTypes = {\n    override: PropTypes.bool,\n    backDrop: PropTypes.bool\n};\n \nModalApp.defaultProps = {\n    override : false,\n    backDrop : true\n}\nexport default ModalApp ;\n","import React from 'react'\nimport './styles.css'\n export const Button = (props) => {\n    return (\n        <div className={\"button-style \" +props.classStyle} onClick={props.handleClick}>{props.label}</div>\n    )\n }","import Modal from \"../Modal\";\nimport Editor from \"../Editor\";\nimport {Button} from \"../Button\";\nimport React from \"react\";\nimport './styles.css'\n\nexport const Index = (props) => {\n\n    return (\n        <Modal containerClassName={\"new-post-modal\"} isModalOpen={props.show}  backDrop={true} withClose={true}\n               closeFunc={props.close}>\n\n                <div className={\"col-xs-12  title-container\"}>\n                    <div className={\"col-xs-3 title\"}>\n                        {\"Title : \"}\n                    </div>\n                    <div className={\"col-xs-9\"}>\n                        <input type={\"text\"} className={\"input\"}/>\n                    </div>\n                </div>\n                <div className={\"col-xs-12 description-container\"}>\n                    <div className={\"col-xs-3 description\"}>\n                        {\"Description :\"}\n                    </div>\n                    <div className={\"col-xs-9\"}>\n                             <Editor/>\n\n                    </div>\n                </div>\n                <div className={\"col-xs-12 bottom-buttons\"}>\n                    <div className={\"col-xs-3 col-xs-offset-9\"}>\n                        <Button classStyle={\"add\"} handleClick={props.doCreate} label={\"Add\"}/>\n                        <Button classStyle={\"cancel\"} handleClick={props.close} label={\"Cancel\"}/>\n                    </div>\n\n                </div>\n\n        </Modal>\n    )\n}","import React, {Component} from 'react'\nimport * as queries from '../../graphql/queries'\nimport * as mutations from '../../graphql/mutations'\nimport Editor from \"../../component/Editor\";\nimport {API, graphqlOperation} from \"aws-amplify\";\nimport Modal from \"../../component/Modal\";\nimport {Button} from \"../../component/Button\";\nimport {Index} from '../../component/AddPostModal'\n\nclass NewPost extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            show:false,\n            title:\"\",\n            description:\"\"\n        }\n        this.handleShowCreatePost = this.handleShowCreatePost.bind(this);\n        this.doCreate = this.doCreate.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    handleShowCreatePost(){\n        this.setState(prev => ({\n            ...prev,\n            show: !prev.show\n        }))\n    }\n    close(){\n        this.setState(prev => ({\n            ...prev,\n            show: false\n        }))\n    }\n    doCreate(){\n\n    }\n\n    render (){\n        return (\n            <div>\n                <Button handleClick={this.handleShowCreatePost} label={\"Créer un Article\"}/>\n                <Index {...this.state} close={this.close} doCreate={this.doCreate}/>\n            </div>\n        )\n    }\n}\n\nexport default NewPost\n\n","import React, {Component} from 'react';\nimport Home from '../pages/Home';\nimport Footer from './Footer';\nimport Blog from '../pages/Blog';\nimport PostShow from '../pages/PostShow';\nimport LeftContent from './LeftContent';\nimport {Route, Switch, HashRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './styles.css'\nimport Header from \"./header\";\nimport NewPost from \"../newPost\";\n\nconst AuthRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <div className={\"main-container\"}>\n            <div className={\"col-xs-12\"}>\n                <div className={\"col-xs-2 left-content\"}>\n                    <LeftContent/>\n                </div>\n                <div className={\"col-xs-10 right-content\"}>\n                    <Header/>\n                    <NewPost/>\n                    <Route {...rest} render={props => (<Component {...props} {...rest}/>)} />\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n\nclass Root extends Component {\n\n    render() {\n        let state = {};\n        return (\n            <div>\n                <HashRouter>\n                    <div>\n\n                        <div>\n                            <Switch>\n                                <AuthRoute {...this.props} pageName=\"Home\" state={state} exact path=\"/\" component={Home}/>\n                                <AuthRoute  {...this.props} pageName=\"Post\" state={state} exact path=\"/post/:id\" component={PostShow}/>\n                                <AuthRoute  {...this.props} pageName=\"Blog\" state={state} exact path=\"/blog/:id\" component={Blog}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </HashRouter>\n            </div>\n        )\n    }\n}\n\nRoot.contextTypes = {\n    store: PropTypes.object\n}\n\nexport default Root;\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Auth, API, graphqlOperation} from 'aws-amplify'\nimport awsconfig from './aws-exports'\nimport * as queries from './graphql/queries'\nimport * as mutations from './graphql/mutations'\nimport {withAuthenticator} from \"aws-amplify-react\";\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport messages_en from \"./Localization/en.json\";\nimport messages_fr from \"./Localization/fr.json\";\nimport Root from \"./container/layout/Root\";\n\nAuth.configure(awsconfig)\nAPI.configure(awsconfig)\nfunction App() {\n\n  // const oneBlog = API.graphql(graphqlOperation(queries.getBlog, {id:\"5d6b2f24-cb41-4cc9-b7e9-90cb30128159\"}))\n  // console.log(oneBlog)\n  //\n  // Auth.currentAuthenticatedUser({\n  //   bypassCache: false\n  // }).then((user) =>{\n  //   console.log(\"user: \" + JSON.stringify(user))\n  // })\n  // const blog = {name: \"Etudes\"};\n  // const newBlog = API.graphql(graphqlOperation(mutations.createBlog, {input: blog}))\n  // console.log(newBlog)\n\n  // const updateBlog= (blog, newName) => {\n  //   blog['name'] = newName;\n  //   API.graphql(graphqlOperation(mutations.updateBlog, {input:blog}))\n  // }\n  // const deleteBlog= (blog) => {\n  //   API.graphql(graphqlOperation(mutations.deleteBlog, {input:{'id':blog['id']}}))\n  // }\n  //\n  // const blogToUpdate = API.graphql(graphqlOperation(queries.getBlog, {id:\"09f53874-7ddb-4acb-a1e8-821eae2cf939\"}))\n  //\n  const etudeBlog = API.graphql(graphqlOperation(queries.listBlogs, {filter:{'name':{'eq':\"Etudes\"}}}))\n    //\n    // const etudeBlog  =API.graphql(graphqlOperation(queries.listBlogs, {filter:{'name':{'eq':\"Etudes\"}}}))\n    console.log(etudeBlog)\n\n    // const allblogs = API.graphql(graphqlOperation(queries.listBlogs))\n    // console.log(allblogs)\n  const messagesList = {\n    'en': messages_en,\n    'fr':messages_fr\n  };\n  const languageWithoutRegionCode = 'en';// TODO should refactor when other languages are supported\n\n// Try full locale, fallback to locale without region code, fallback to en\n  const messages = messagesList.fr;\n\n\n  return (\n      <IntlProvider locale={languageWithoutRegionCode} messages={messages}>\n            <Root api={API} auth={Auth}/>\n      </IntlProvider>\n  );\n}\n\nexport default withAuthenticator(App, {includeGreetings:true});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport './vendors/boostrap/bootstrap.css';\nimport \"../node_modules/font-awesome/css/font-awesome.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}